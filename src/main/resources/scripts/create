DROP DATABASE IF EXISTS nfl;
CREATE DATABASE IF NOT EXISTS nfl;
USE nfl;

CREATE TABLE fantasy_team (

	id INT,
    team_name VARCHAR(30) NOT NULL,
    owner_name VARCHAR(20),
    CONSTRAINT fantasy_team_pk PRIMARY KEY (id)

);

CREATE TABLE nfl_team (

	id INT,
    team_name VARCHAR(3) NOT NULL,
    full_name VARCHAR(25) NOT NULL,
    CONSTRAINT nfl_team_pk PRIMARY KEY (id)

);

CREATE TABLE players (
	id INT,
    player_name VARCHAR(70) NOT NULL,
    slug VARCHAR(70),
    position ENUM ('QB', 'WR', 'RB', 'TE', 'DST', 'K', 'DL', 'LB', 'DB') NOT NULL,
    nfl_team INT,
    rookie BOOLEAN,
    age DECIMAL(3,1),
    height_feet INT,
    height_inches INT,
    weight INT,
    seasons_experience INT,
    pick_round INT,
    pick_num INT,
    player_number INT,
    birthday DATE,
    draft_year INT,
    college VARCHAR(70),
    fantasy_team INT DEFAULT NULL,
    CONSTRAINT players_pk PRIMARY KEY (id),
    CONSTRAINT players_fk1 FOREIGN KEY (nfl_team) REFERENCES nfl_team (id),
    CONSTRAINT players_fk2 FOREIGN KEY (fantasy_team) REFERENCES fantasy_team (id)
);



CREATE TABLE standard_value_history (
	id INT AUTO_INCREMENT,
	player_id INT NOT NULL,
    date DATE NOT NULL,
    value INT NOT NULL,
    CONSTRAINT standard_value_history_pk PRIMARY KEY (id),
	CONSTRAINT standard_value_history_fk1 FOREIGN KEY (player_id) REFERENCES players(id)

);

CREATE TABLE superflex_value_history (
	id INT AUTO_INCREMENT,
	player_id INT NOT NULL,
    date DATE NOT NULL,
    value INT NOT NULL,
    CONSTRAINT superflex_value_history_pk PRIMARY KEY (id),
	CONSTRAINT superflex_value_history_fk1 FOREIGN KEY (player_id) REFERENCES players(id)

);
CREATE TABLE fantasy_draft (
	id INT AUTO_INCREMENT,
	player_id INT NOT NULL,
    fantasy_team INT NOT NULL,
    draft_year INT NOT NULL,
    pick_round INT NOT NULL,
    pick_num INT NOT NULL,
    pick_overall INT NOT NULL,
    keeper BOOLEAN NOT NULL,
    CONSTRAINT fantasy_draft_pk PRIMARY KEY (id),
    CONSTRAINT fantasy_draft_fk1 FOREIGN KEY (player_id) REFERENCES players(id),
    CONSTRAINT fantasy_draft_fk2 FOREIGN KEY (fantasy_team) REFERENCES fantasy_team(id)
);


DROP TRIGGER IF EXISTS update_after_fantasy_draft;
DELIMITER $$
CREATE TRIGGER update_after_fantasy_draft
AFTER INSERT ON fantasy_draft
FOR EACH ROW
BEGIN
	UPDATE players SET fantasy_team = NEW.fantasy_team WHERE id = NEW.player_id;
END;
$$
DELIMITER ;


CREATE TABLE fantasy_transactions (
    id INT AUTO_INCREMENT,
    player_id INT,
    fantasy_team_id INT,
    transaction_type ENUM('add', 'drop', 'trade') NOT NULL,
    destination_team_id INT,
    transaction_date DATE NOT NULL,
    CONSTRAINT fantasy_transactions_pk PRIMARY KEY (id),
    CONSTRAINT fantasy_transactions_fk1 FOREIGN KEY (player_id) REFERENCES players (id),
    CONSTRAINT fantasy_transactions_fk2 FOREIGN KEY (fantasy_team_id) REFERENCES fantasy_team (id),
    CONSTRAINT fantasy_transactions_fk3 FOREIGN KEY (destination_team_id) REFERENCES fantasy_team (id)
);

DROP TRIGGER IF EXISTS after_insert_movement;
DELIMITER $$
CREATE TRIGGER after_insert_movement
AFTER INSERT ON fantasy_transactions
FOR EACH ROW
BEGIN
    IF NEW.transaction_type = 'add' OR 'trade' THEN
        UPDATE players SET fantasy_team = NEW.fantasy_team_id WHERE id = NEW.player_id;
    ELSE
        UPDATE players SET fantasy_team = NULL WHERE id = NEW.player_id;
    END IF;
END;
$$
DELIMITER ;